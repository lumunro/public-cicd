# Added comment here
name: Redeploy Specific Environments Using Inputs

on:
  workflow_dispatch:
    inputs:
      reference:
        description: Specify the branch reference tag or SHA
        required: true
      deployDevelopment:
        description: Deploy to development
        required: false
        default: true
      deployStaging:
        description: Deploy to staging
        required: false
        default: false
      deployProduction:
        description: Deploy to production
        required: false
        default: false

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        fetch-depth: 0
        ref: ${{ github.event.inputs.reference }}

      - name: Build
        run: |
          echo Github reference ${{ github.ref }}
          echo Github reference SHA ${{ github.sha }}
          echo Running build ${{ github.run_id }}...
  
  Development:
    needs: Build
    if: github.ref == 'refs/heads/main' || github.event.inputs.deployDevelopment == 'true'
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - name: Deploy
        run: echo Deploying ${{ github.run_id }} to Development

  Staging:
    needs: Build
    if: github.ref == 'refs/heads/main' || github.event.inputs.deployStaging == 'true'
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - name: Deploy
        run: echo Deploying ${{ github.run_id }} to Staging

  Production:
    needs: Build
    if: github.ref == 'refs/heads/main' || github.event.inputs.deployProduction == 'true'
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Deploy
        run: echo Deploying ${{ github.run_id }} to Production

      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: cicd-environments
      #     if-no-files-found: error
      #     path: iac/
  
  # DeployDevelopment:
  #   name: Deploy to Development
  #   environment: Development
  #   if: github.event_name == 'pull_request'
  #   needs: [Build]
  #   runs-on: ubuntu-latest
  #   env:
  #     CURRENT_ENVIRONMENT: Development
  #     TEMPLATE_FILE: ./iac/main.bicep
  #     PARAMETERS_FILE: ./iac/parameters.development.json
  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: cicd-environments
  #         path: iac/
      
  #     - name: Deploy
  #       run: |
  #         echo I am deploying in ${{ env.CURRENT_ENVIRONMENT }}
  #         echo using template file ${{ env.TEMPLATE_FILE }}
  #         echo using parameter file ${{ env.PARAMETERS_FILE }}
  #         echo contents of parameters file as follows:
  #         cat ${{ env.PARAMETERS_FILE }}
  
  # DeployStaging:
  #   name: Deploy to Staging
  #   environment: Staging
  #   if: github.event.ref == 'refs/heads/main'
  #   needs: [Build]
  #   runs-on: ubuntu-latest
  #   env:
  #     CURRENT_ENVIRONMENT: Staging
  #     TEMPLATE_FILE: ./iac/main.bicep
  #     PARAMETERS_FILE: ./iac/parameters.staging.json
  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: cicd-environments
  #         path: iac/
      
  #     - name: Deploy
  #       run: |
  #         echo I am deploying in ${{ env.CURRENT_ENVIRONMENT }}
  #         echo using template file ${{ env.TEMPLATE_FILE }}
  #         echo using parameter file ${{ env.PARAMETERS_FILE }}
  #         echo contents of parameters file as follows:
  #         cat ${{ env.PARAMETERS_FILE }}
  
  # DeployProduction:
  #   name: Deploy to Production
  #   environment: Production
  #   needs: [DeployStaging]
  #   runs-on: ubuntu-latest
  #   env:
  #     CURRENT_ENVIRONMENT: Production
  #     TEMPLATE_FILE: ./iac/main.bicep
  #     PARAMETERS_FILE: ./iac/parameters.production.json
  #   steps:
  #     - name: Download Artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: cicd-environments
  #         path: iac/
      
  #     - name: Deploy
  #       run: |
  #         echo I am deploying in ${{ env.CURRENT_ENVIRONMENT }}
  #         echo using template file ${{ env.TEMPLATE_FILE }}
  #         echo using parameter file ${{ env.PARAMETERS_FILE }}
  #         echo contents of parameters file as follows:
  #         cat ${{ env.PARAMETERS_FILE }}
